##spring.application.name=Animals
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=psswd
##spring.jpa.hibernate.ddl-auto = update
##jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
##spring.flyway.enabled=true
#spring.flyway.locations=classpath:src/test/resources/db/migration

###spring.datasource.url=jdbc:h2:mem:test;MODE=POSTGRESQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.url=jdbc:h2:mem:test;MODE=POSTGRESQL

## spring.datasource.driver-class-name h2 and postgresql
#spring.datasource.driver-class-name=org.h2.Driver
## ee ## spring.datasource.driver-class-name=org.postgresql.Driver

#spring.datasource.username=
#spring.datasource.password=
# We add the MySQL Dialect so that it understands and generates the query based on MySQL

spring.h2.console.enabled=true
#spring.jpa.defer-datasource-initialization =true #set it to false
spring.jpa.defer-datasource-initialization=false
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
#jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.sql.init.mode=always
#spring.flyway.baseline-on-migrate=true
#spring.flyway.enabled=true
#flyway.mixed=true

